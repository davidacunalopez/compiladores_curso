<inicio>	::=	WORLDNAME	#CrearTLG	<identificador>	:	<seccion>									
<seccion>	::=	<seccion1_bedrock>	<seccion1_resourcepack>	<seccion1_inventory>	<seccion1_recipe>	<seccion1_craftingtable>	<punto_entrada>	<final>							
<seccion>	::=														
<seccion1_bedrock>	::=	BEDROCK	<sistema_asignacion_constante>												
<seccion1_bedrock>	::=														
<seccion1_resourcepack>	::=	RESOURCEPACK	<sistema_asignacion_tipos>												
<seccion1_resourcepack>	::=														
<seccion1_inventory>	::=	INVENTORY	<sistema_asignacion_variables>												
<seccion1_inventory>	::=														
<seccion1_recipe>	::=	RECIPE	<encabezado>												
<seccion1_recipe>	::=														
<seccion1_craftingtable>	::=	CRAFTINGTABLE	<seccion1_craftingtable2>												
<seccion1_craftingtable>	::=														
<seccion1_craftingtable2>	::=	#EmpezarAnalizarReturn	<identificador>	<bloque>	#ComprobarReturn	<seccion1_craftingtable2>									
<seccion1_craftingtable2>	::=														
<sistema_asignacion_constante>	::=	OBSIDIAN	#AlmacenarTipoConstante	<tipo>	#ValidarExistenciaIdentificadorConstante	<identificador>	=	#ValidarTipoValorConstante	<valor>	<terminador>	<sistema_asignacion_constante>				
<sistema_asignacion_constante>	::=														
<sistema_asignacion_tipos>	::=	ANVIL	#ValidarExistenciaIdentificadorTipo	<identificador>	->	#ValidarValorTipo	<tipo>	<terminador>	<sistema_asignacion_tipos>						
<sistema_asignacion_tipos>	::=														
<sistema_asignacion_variables>	::=	#AlmacenarTipoVariable	<tipo>	<sistema_asignacion_variables2>											
<sistema_asignacion_variables>	::=	#AlmacenarTipoVariable	<identificador>	<sistema_asignacion_variables2>											
<sistema_asignacion_variables>	::=														
<sistema_asignacion_variables2>	::=	<lista_ids_valores>	#BorrarTipoVariable	<terminador>	<sistema_asignacion_variables>										
<encabezado>	::=	SPELL	#AlmacenarFuncion	<identificador>	<parentesis>	->	#AlmacenarTipoFuncion	<tipo>	<terminador>	<encabezado>					
<encabezado>	::=	RITUAL	#AlmacenarProcedimiento	<identificador>	<parentesis>	#BorrarIdentificador	<terminador>	<encabezado>							
<encabezado>	::=														
<parentesis>	::=	(	<parametros>	)											
<parametros>	::=	<parametros_formales>													
<parametros>	::=	<parametros_reales>													
<parametros>	::=														
<parametros_formales>	::=	#AlmacenarTipoParametroFormal	<tipo>	::	#ValidarExistenciaIdentificadorParametroFormal	<identificador>	<mas_parametros_formales>								
<mas_parametros_formales>	::=	,	#AlmacenarTipoParametroFormal	<tipo>	::	#ValidarExistenciaIdentificadorParametroFormal	<identificador>	<mas_parametros_formales>							
<mas_parametros_formales>	::=														
<parametros_reales>	::=	#ValidarExistenciaIdentificadorParametroReal	<identificador>	<mas_parametros_reales>											
<mas_parametros_reales>	::=	,	#ValidarExistenciaIdentificadorParametroReal	<identificador>	<mas_parametros_reales>										
<mas_parametros_reales>	::=														
<lista_ids_valores>	::=	#ValidarExistenciaIdentificadorVariable	<identificador>	=	#ValidarTipoValorVariable	<valor>	<mas_lista_ids_valores>								
<mas_lista_ids_valores>	::=	,	#ValidarExistenciaIdentificadorVariable	<identificador>	=	#ValidarTipoValorVariable	<valor>	<mas_lista_ids_valores>							
<mas_lista_ids_valores>	::=														
<tipo>	::=	STACK													
<tipo>	::=	RUNE													
<tipo>	::=	SPIDER													
<tipo>	::=	TORCH													
<tipo>	::=	CHEST													
<tipo>	::=	BOOK													
<tipo>	::=	GHAST													
<tipo>	::=	SHELF													
<tipo>	::=	ENTITY													
<literal_booleano>	::=	ON													
<literal_booleano>	::=	OFF													
<literal_flotante>	::=	LITERAL_FLOTANTE													
<literal_entero>	::=	LITERAL_ENTERO													
<literal_caracter>	::=	LITERAL_CARACTER													
<literal_string>	::=	LITERAL_STRING													
<literal_arreglo>	::=	LITERAL_ARREGLO													
<literal_registro>	::=	LITERAL_REGISTRO													
<punto_entrada>	::=	SPAWNPOINT	<bloque>												
<valor>	::=	<literal_booleano>													
<valor>	::=	<literal_flotante>													
<valor>	::=	<literal_entero>													
<valor>	::=	<literal_caracter>													
<valor>	::=	<literal_string>													
<valor>	::=	<literal_arreglo>													
<valor>	::=	<literal_registro>													
<terminador>	::=	;													
<instruccion>	::=	<bloque>													
<instruccion>	::=	<variable>	<instruccion>												
<instruccion>	::=	ANVIL	<identificador>	->	<tipo>	<terminador>	<sistema_asignacion_tipos>								
<instruccion>	::=														
<bloque>	::=	POLLOCRUDO	<instruccion>	POLLOASADO	<terminador>										
<operador>	::=	+													
<operador>	::=	-													
<operador>	::=	*													
<operador>	::=	/													
<operador>	::=	%													
<operacion_incre_decre>	::=	SOULSAND													
<operacion_incre_decre>	::=	MAGMA													
<incre_decre>	::=	<operacion_incre_decre>	<identificador>	#ValidarIdentificadorIncrementoDecremento	<terminador>										
<operacion_caracter>	::=	ISENGRAVED													
<operacion_caracter>	::=	ISINSCRIBED													
<operacion_caracter>	::=	ETCHUP													
<operacion_caracter>	::=	ETCHDOWN													
<operacion_logica>	::=	AND													
<operacion_logica>	::=	OR													
<operacion_logica_not>	::=	NOT													
<operacion_logica>	::=	XOR													
<operacion_string>	::=	BIND													
<operacion_string>	::=	FROM													
<operacion_string>	::=	EXCEPT													
<operacion_string>	::=	SEEK													
<operacion_flotante>	::=	%													
<operacion_comparacion>	::=	<													
<operacion_comparacion>	::=	>													
<operacion_comparacion>	::=	<=													
<operacion_comparacion>	::=	>=													
<operacion_comparacion>	::=	IS													
<operacion_comparacion>	::=	ISNOT													
<operacion_sizeof>	::=	CHUNK	<tipo_sizeof>												
<tipo_sizeof>	::=	<identificador>													
<tipo_sizeof>	::=	<tipo>													
<variable>	::=	#AntesVerificarAsignacion	<identificador>	<variable2>	#VerificarAsignacion										
<variable2>	::=	=	<variable_asignacion>												
<variable2>	::=	<asignacion_operando>	<variable_asignacion_operando>												
<variable2>	::=	<operacion_incre_decre>	<terminador>												
<variable2>	::=	<operacion_sizeof>	<terminador>												
<variable_asignacion>	::=	<expresion_booleana>	<terminador>												
<variable_asignacion>	::=	<expresion_caracter>	<terminador>												
<variable_asignacion>	::=	<expresion_string>	<terminador>												
<variable_asignacion>	::=	<expresion_arreglo>	<terminador>												
<variable_asignacion>	::=	<expresion_registro>	<terminador>												
<variable_asignacion>	::=	<expresion_flotante>	<terminador>												
<variable_asignacion>	::=	<expresion_entera>	<terminador>												
<variable_asignacion_operando>	::=	<expresion_flotante>	<terminador>												
<variable_asignacion_operando>	::=	<expresion_entera>	<terminador>												
<expresion_booleana>	::=	<literal_booleano>													
<expresion_flotante>	::=	<literal_flotante>	<mas_expresion_flotante>												
<mas_expresion_flotante>	::=	<operacion_flotante>	<literal_flotante>	<mas_expresion_flotante>											
<mas_expresion_flotante>	::=														
<expresion_entera>	::=	<literal_entero>	<mas_expresion_entera>												
<mas_expresion_entera>	::=	<operador>	<literal_entero>	#ValidarOperacionEntero	<mas_expresion_entera>										
<mas_expresion_entera>	::=	<operacion_logica>	<literal_entero>	#ValidarOperacionEntero	<mas_expresion_entera>										
<mas_expresion_entera>	::=	<operacion_comparacion>	<literal_entero>	#ValidarOperacionComparacion	<mas_expresion_entera>										
<mas_expresion_entera>	::=														
<expresion_caracter>	::=	<literal_caracter>	<mas_expresion_caracter>												
<mas_expresion_caracter>	::=	<operacion_caracter>	<literal_caracter>	#ValidarOperacionCaracter	<mas_expresion_caracter>										
<mas_expresion_caracter>	::=														
<expresion_string>	::=	#ValidarOperacionString	<literal_string>	<mas_expresion_string>											
<mas_expresion_string>	::=	<operacion_string>	#ValidarOperacionString	<literal_string>	<mas_expresion_string>										
<mas_expresion_string>	::=														
<expresion_arreglo>	::=	<literal_arreglo>													
<expresion_registro>	::=	<literal_registro>													
<asignacion_operando>	::=	<operador>	=												
<identificador>	::=	IDENTIFICADOR													
<final>	::=	WORLDSAVE													
<instruccion>	::=	<incre_decre>	<instruccion>												
<instruccion>	::=	<ciclo_while>	<instruccion>												
<instruccion>	::=	<ciclo_for>	<instruccion>												
<instruccion>	::=	<ciclo_repeat_until>	<instruccion>												
<instruccion>	::=	<instruccion_halt>	<terminador>	<instruccion>											
<instruccion>	::=	<instruccion_break>	<terminador>	<instruccion>											
<instruccion>	::=	<instruccion_continue>	<terminador>	<instruccion>											
<instruccion>	::=	<instruccion_switch>	<terminador>	<instruccion>											
<instruccion>	::=	<instruccion_with>	<instruccion>												
<instruccion>	::=	<instruccion_dropper>	<terminador>	<instruccion>											
<instruccion>	::=	<instruccion_return>	<instruccion>												
<instruccion>	::=	<if_then_else>	<instruccion>												
<instruccion_halt>	::=	RAGEQUIT	<terminador>												
<instruccion_break>	::=	CREEPER	<terminador>												
<instruccion_continue>	::=	ENDERPEARL	<terminador>												
<instruccion_dropper>	::=	DROPPER	<tipo>	(	<identificador>	)									
<instruccion_return>	::=	#SiHayReturn	RESPAWN	<instruccion_return2>											
<instruccion_return2>	::=	<terminador>													
<instruccion_return2>	::=	<valor>	<terminador>												
<instruccion_return2>	::=	<identificador>	<terminador>												
<ciclo_while>	::=	REPEATER	#ValidarCondicionWhile	<condicion>	CRAFT	<bloque>									
<ciclo_for>	::=	WALK	<identificador>	#ValidarIdentificadorForRecorrido	SET	#ValidarLiteralEnteraFor	<literal_entero>	TO	#ValidarLiteralEnteraFor	<literal_entero>	<ciclo_for2>				
<ciclo_for2>	::=	STEP	#ValidarLiteralEnteraFor	<literal_entero>	CRAFT	<bloque>									
<ciclo_for2>	::=	CRAFT	<bloque>	#ValidarTopeFor											
<ciclo_repeat_until>	::=	SPAWNER	<bloque>	EXHAUSTED	#ValidarCondicionRepeat	<condicion>	<terminador>								
<instruccion_with>	::=	WITHER	#ValidarIdentificadorWith	<identificador>	CRAFT	<bloque>									
<instruccion_switch>	::=	JUKEBOX	<condicion>	CRAFT	#EmpezarAnalizarDefaultSwitch	<bloque_switch>	#HayDefaultSwitch								
<bloque_switch>	::=	POLLOCRUDO	<casos_switch>	<caso_switch_final>	POLLOASADO										
<casos_switch>	::=	DISC	<literal_entero>	:	<instruccion>	<casos_switch>									
<casos_switch>	::=														
<caso_switch_final>	::=	#SiHayDefaultSwitch	SILENCE	<instruccion>											
<condicion>	::=	<valor_condicion>	<operacion_condicion>	<valor_condicion>	<mas_condicion>										
<condicion>	::=	<operacion_logica_not>	<valor_condicion>	<operacion_condicion>	<valor_condicion>	<mas_condicion>									
<mas_condicion>	::=	<operacion_condicion>	<mas_condicion_con_sin_not>												
<mas_condicion>	::=														
<mas_condicion_con_sin_not>	::=	<operacion_logica_not>	<valor_condicion>	<mas_condicion>											
<mas_condicion_con_sin_not>	::=	<valor_condicion>	<mas_condicion>												
<operacion_condicion>	::=	<operacion_comparacion>	#ValidarOperacionComparacion												
<operacion_condicion>	::=	<operacion_logica>	#ValidarOperacionLogica												
<valor_condicion>	::=	<identificador>	#ValidarValorIdentificador												
<valor_condicion>	::=	<valor>	#ValidarValorValor												
<valor_condicion>	::=	(	<tipo_expresion>	)											
<tipo_expresion>	::=	<expresion_entera>	#ValidarTipoEntera												
<tipo_expresion>	::=	<expresion_flotante>	#ValidarTipoFlotante												
<tipo_expresion>	::=	<expresion_string>	#ValidarTipoString												
<if_then_else>	::=	TARGET	<condicion>	MISS	<bloque>	<else>									
<else>	::=	HIT	<bloque>												
<else>	::=														
